import { YouTubeURLParser } from '@iktakahiro/youtube-url-parser'

import '../dev/dev-hot-reload.lsc'
import { settingsStorageKeys } from '../utils.lsc'
import { createCookieString } from './cookies.lsc'

contextMenuOptions = {
  contexts: ['link'],
  title: 'Open In MPV',
  id: 'mpv-context-menu'
}
defaultSettings = {
  volume: 70,
  alwaysOnTop: false,
  videoQuality: 'original',
  defaultMpvWindowSize: 'off',
  dontLetYTpageVideoAutoLoad: false,
  oscStyle: 'bottombar',
  startMPVpaused: false
}
port = chrome.runtime.connectNative('net.ccoding.ytplaywithmpv')

// if ISDEV: chrome.storage.local.clear()
chrome.contextMenus.create(contextMenuOptions)
chrome.contextMenus.onClicked.addListener(({linkUrl}) -> openInMpv(linkUrl))
chrome.storage.local.get(settingsStorageKeys, setUpDefaultSettings)
chrome.runtime.onMessage.addListener(request ->
  if request?.openInMpv: openInMpv(request.url)
)

setUpDefaultSettings(settings) ->
  if Object.keys(settings).length > 0: return
  chrome.storage.local.set(defaultSettings)

/*****
* Based on https://github.com/winneon/watch-with-mpv/blob/master/extension/background.js
*/
openInMpv(url:string):void ->
  if ISDEV: console.log('openInMpv called with: ', url)
  if !isValidYoutubeUrl(url): return

  chrome.cookies.getAll({domain: 'youtube.com'}, (cookies) ->
    chrome.storage.local.get(settingsStorageKeys, mpvOptions ->
      nativeMessageData = {
        url,
        cookies: createCookieString(cookies),
        mpvOptions
      }
      if ISDEV: console.log('nativeMessageData: ', nativeMessageData)
      port.postMessage(nativeMessageData)
    )
  )

isValidYoutubeUrl(url:string):boolean ->
  parser = new YouTubeURLParser(url)
  parser.isValid()


