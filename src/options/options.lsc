import './styles/font.css'
import './noUiSlider/nouislider.css'
import './materialize/css/materialize.css'
import './styles/options.css'

import { pipe, storageKeys } from '../utils.lsc'

type Settings = {
  volume: number,
  alwaysOnTop: boolean,
  videoQuality: string,
  mpvWindowSize: string,
  dontLetYTpageVideoAutoLoad: boolean,
  oscStyle: string,
  startMPVpaused: boolean
};

//TODO:validate the options and set them to a default if not valid - also set it to not do anything if the new
//value is the same as the old one so as we dont get in to a loop

sixteenByNineRatio = 1.7777777777777777
setUpPage = pipe(setUpInputInitialValues, setUpEventListeners)
volumeSlider = $('#volumeSlider')
volumeSliderOutput = $('#volumeSliderOutput')
mpvWindowSizeSlider = $('#mpvWindowSizeSlider')
mpvWindowSizeSliderOutput = $('#mpvWindowSizeSliderOutput')
alwaysOnTopInput = $('#alwaysOnTop')
dontLetYTpageVideoAutoLoadInput = $('#dontLetYTpageVideoAutoLoad')
oscStylePreviewLink = $('#oscStylePreviewLink')
startMPVpausedInput = $('#startMPVpaused')
oscStyleInput = $('#oscStyle')
videoQualityInput = $('#videoQuality')
volumeSliderSettings = {
  range: {
    'min': [0],
    'max': [100]
  },
  step: 1,
}
windowSizeSliderSettings = {
  step: 10,
}
oscStylePreviewLinkHref = {
  'bottombar': 'https://i.imgur.com/Vxs3B77.jpg',
  'box': 'https://i.imgur.com/7vDvAHs.jpg'
}

chrome.storage.local.get(storageKeys, setUpPage)

setUpInputInitialValues(settings:Settings):void ->
  $('select').formSelect()
  alwaysOnTopInput[0].checked = settings.alwaysOnTop
  dontLetYTpageVideoAutoLoadInput[0].checked = settings.dontLetYTpageVideoAutoLoad
  startMPVpausedInput[0].checked = settings.startMPVpaused
  oscStylePreviewLink.attr('href', oscStylePreviewLinkHref[settings.oscStyle])
  oscStyleInput.val(settings.oscStyle)
  videoQualityInput.val(settings.videoQuality)

  noUiSlider.create(volumeSlider[0],
    { start: [settings.volume], ...volumeSliderSettings }
  )
  volumeSliderOutput.text(settings.volume)

  noUiSlider.create(mpvWindowSizeSlider[0],
    {
      start: [
        Number(settings.mpvWindowSize.split('x')[0])
      ],
      range: {
        'min': [320],
        'max': [window.screen.availWidth]
      },
      ...windowSizeSliderSettings
    }
  )
  mpvWindowSizeSliderOutput.text(settings.mpvWindowSize)


setUpEventListeners():void ->
//TODO: make sure to cast them to their proper values here - like number and boolean as they might be text
  volumeSlider[0].noUiSlider.on('update', (values, handle) ->
    volume = Number(values[handle].split('.')[0])
    volumeSliderOutput.text(volume)
    chrome.storage.local.set({volume})
  )
  volumeSlider.find('.noUi-handle').on('keydown', e ->
    value = Number(volumeSlider[0].noUiSlider.get())
    if e.which === 37: volumeSlider[0].noUiSlider.set(value - 1)
    if e.which === 39: volumeSlider[0].noUiSlider.set(value + 1)
  )
  mpvWindowSizeSlider[0].noUiSlider.on('update', (values, handle) ->
    mpvWindowSize = generateWindowSize(values[handle])
    mpvWindowSizeSliderOutput.text(mpvWindowSize)
    chrome.storage.local.set({mpvWindowSize})
  )
  mpvWindowSizeSlider.find('.noUi-handle').on('keydown', e ->
    value = Number(mpvWindowSizeSlider[0].noUiSlider.get())
    if e.which === 37: mpvWindowSizeSlider[0].noUiSlider.set(value - 10)
    if e.which === 39: mpvWindowSizeSlider[0].noUiSlider.set(value + 10)
  )
  alwaysOnTopInput.on('change', e ->
    chrome.storage.local.set({alwaysOnTop: e.currentTarget.checked})
  )
  dontLetYTpageVideoAutoLoadInput.on('change', e ->
    chrome.storage.local.set({dontLetYTpageVideoAutoLoad: e.currentTarget.checked})
  )
  startMPVpausedInput.on('change', e ->
    chrome.storage.local.set({startMPVpaused: e.currentTarget.checked})
  )
  oscStyleInput.on('change', e ->
    oscStylePreviewLink.attr('href', oscStylePreviewLinkHref[e.currentTarget.value])
    chrome.storage.local.set({oscStyle: e.currentTarget.value})
  )
  videoQualityInput.on('change', e ->
    chrome.storage.local.set({videoQuality: e.currentTarget.value})
  )

generateWindowSize(sliderValue:string):string ->
  width = Number(sliderValue.split('.')[0])
  `${ width }x${ Math.round(width/sixteenByNineRatio) }`

//TODO:do below
  // Array.from(optionElements).forEach(inputElem => {

  //   inputElem.addEventListener('change', saveOptions)

  //   if(inputElem.dataset.settingKey === 'extensionToken'){
  //     /*****
  //     * Also need .addEventListener('input' for extensionToken Input as $('input').addEventListener('change'
  //     * only fires for text input change once it loses focus, so using .addEventListener('input' as
  //     * well so it saves straight away on paste.
  //     */
  //     inputElem.addEventListener('input', saveOptions)
  //   }
  // })
